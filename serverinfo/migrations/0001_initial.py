# Generated by Django 3.2.4 on 2021-08-19 11:18

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OsType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('os_type', models.CharField(max_length=150, verbose_name='OS Type')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('update_time', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0))),
                ('update_by', models.ForeignKey(null='True', on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OsVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('os_version', models.CharField(max_length=150, verbose_name='OS Version')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('update_time', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0))),
                ('update_by', models.ForeignKey(null='True', on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PhysicalServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_name', models.CharField(max_length=150, verbose_name='Server Name')),
                ('location', models.CharField(choices=[('dc', 'DC'), ('dr', 'DR')], max_length=10, verbose_name='Server Location')),
                ('rack', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20')], max_length=10, verbose_name='Rack No.')),
                ('loc_in_rack', models.CharField(max_length=150, verbose_name='Location in Rack')),
                ('form_factor', models.CharField(choices=[('1', '1U'), ('2', '2U'), ('4', '4U')], max_length=5, verbose_name='Form Factor')),
                ('idrac_ip', models.GenericIPAddressField(blank=True, null=True, unique=True, verbose_name='IDrac IP')),
                ('primary_ip', models.GenericIPAddressField(unique=True, verbose_name='Primary IP')),
                ('secondary_ip', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Other IP')),
                ('public_ip', models.GenericIPAddressField(blank=True, null=True, unique=True, verbose_name='Public IP')),
                ('brand', models.CharField(max_length=100, verbose_name='Brand')),
                ('model', models.CharField(max_length=100, verbose_name='Model')),
                ('service_tag', models.CharField(default='NULL', max_length=100, unique=True, verbose_name='Service Tag')),
                ('asset_code', models.CharField(default='NULL', max_length=100, unique=True, verbose_name='Asset Code')),
                ('ram', models.IntegerField(blank=True, null=True, verbose_name='RAM(GB)')),
                ('no_of_hdd', models.IntegerField(blank=True, null=True, verbose_name='Hard Disk Count')),
                ('total_storage', models.IntegerField(blank=True, null=True, verbose_name='Total Usable Storage(GB)')),
                ('processor_core', models.IntegerField(blank=True, null=True, verbose_name='Processor Core')),
                ('server_receive_date', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='Server Receive Date')),
                ('warranty_expiry_date', models.DateField(blank=True, default=datetime.datetime(2024, 8, 18, 17, 18, 53, 200881), null=True, verbose_name='Warranty Expiry Date')),
                ('vendor_name', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Vendor Name')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('update_time', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0))),
                ('os_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='serverinfo.ostype')),
                ('os_version', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='server_os_version', to='serverinfo.osversion')),
            ],
        ),
        migrations.CreateModel(
            name='RunningServices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=250, unique=True, verbose_name='Service Name')),
                ('service_ip', models.CharField(blank=True, max_length=100, null=True, verbose_name='Service IP')),
                ('service_file_loc', models.CharField(blank=True, max_length=250, null=True, verbose_name='Service File Location')),
                ('service_owner', models.CharField(max_length=250, verbose_name='Service Owner')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('update_time', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0))),
                ('update_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone', models.CharField(max_length=150, verbose_name='Zone')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('update_time', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0))),
                ('update_by', models.ForeignKey(null='True', on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VMLocationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('container', models.CharField(max_length=250, verbose_name='VM Location Type')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('update_time', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0))),
                ('update_by', models.ForeignKey(null='True', on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VirtualServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_name', models.CharField(max_length=150, verbose_name='Server Name')),
                ('location', models.CharField(choices=[('dc', 'DC'), ('dr', 'DR')], max_length=10, verbose_name='Server Location')),
                ('primary_ip', models.GenericIPAddressField(unique=True, verbose_name='Primary IP')),
                ('secondary_ip', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Other IP')),
                ('public_ip', models.GenericIPAddressField(blank=True, null=True, unique=True, verbose_name='Public IP')),
                ('ram', models.IntegerField(blank=True, null=True, verbose_name='RAM(GB)')),
                ('no_of_hdd', models.IntegerField(blank=True, null=True, verbose_name='Hard Disk Count')),
                ('total_storage', models.IntegerField(blank=True, null=True, verbose_name='Total Usable Storage(GB)')),
                ('processor_core', models.IntegerField(blank=True, null=True, verbose_name='Processor Core')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('update_time', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0))),
                ('os_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='vm_os_version', to='serverinfo.ostype')),
                ('os_version', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='vm_os_version', to='serverinfo.osversion')),
                ('service_name', models.ManyToManyField(blank=True, null=True, related_name='vm_runs_server', to='serverinfo.RunningServices')),
                ('update_by', models.ForeignKey(null='True', on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
                ('vm_location', models.ForeignKey(blank=True, max_length=250, null=True, on_delete=django.db.models.deletion.RESTRICT, to='serverinfo.physicalserver')),
                ('vm_location_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='serverinfo.vmlocationtype')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='serverinfo.zone')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type_name', models.CharField(max_length=250, verbose_name='Service Type')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('update_time', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0))),
                ('update_by', models.ForeignKey(null='True', on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.CharField(max_length=250, verbose_name='Project Title')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('update_time', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0))),
                ('update_by', models.ForeignKey(null='True', on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='physicalserver',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='serverinfo.project'),
        ),
        migrations.AddField(
            model_name='physicalserver',
            name='service_name',
            field=models.ManyToManyField(blank=True, null=True, related_name='runs_server', to='serverinfo.RunningServices'),
        ),
        migrations.AddField(
            model_name='physicalserver',
            name='service_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='service_type_physical', to='serverinfo.runningservices'),
        ),
        migrations.AddField(
            model_name='physicalserver',
            name='update_by',
            field=models.ForeignKey(null='True', on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='physicalserver',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='serverinfo.zone'),
        ),
    ]
